{"ast":null,"code":"var _jsxFileName = \"/Users/adamolson/Desktop/skywardSolutions/weather-app-youtube/weather-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"045530b3196e77c7a0aefff762653af0\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const search = event => {\n    if (event.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery('');\n      });\n    }\n  };\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: \"New York City, NY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WfIlIcXSxCUve4W/aFy4QSWUDkM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","event","fetch","then","res","json","result","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","Date"],"sources":["/Users/adamolson/Desktop/skywardSolutions/weather-app-youtube/weather-react/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst api = {\n  key: \"045530b3196e77c7a0aefff762653af0\", \n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n\n  const[query, setQuery] = useState('')\n  const[weather, setWeather] = useState({})\n\n  const search = event => {\n    if(event.key === \"Enter\"){\n      fetch(`${api.base}weather?q=${query}&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result)\n          setQuery('')\n        });\n    }\n  }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()]\n    let date = d.getDate()\n    let month = months[d.getMonth()]\n    let year = d.getFullYear()\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n\n  return (\n    <div className= 'App'>\n      <main>\n        <div className=\"search-box\">\n          <input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n\n          />\n        </div>\n\n        <div>\n          <div className=\"location-box\">\n            <div className=\"location\">New York City, NY</div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n        </div>\n        <div>\n          <div className=\"weather-box\">\n            <div className=\"weather\">\n              \n            </div>\n            <div className=\"temperature\">\n\n            </div>\n          </div>\n        </div>\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAEvC,MAAMC,GAAG,GAAG;EACVC,GAAG,EAAE,kCAAkC;EACvCC,IAAI,EAAE;AACR,CAAC;AAED,SAASC,GAAG,GAAG;EAAA;EAEb,MAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAK,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEzC,MAAMS,MAAM,GAAGC,KAAK,IAAI;IACtB,IAAGA,KAAK,CAACR,GAAG,KAAK,OAAO,EAAC;MACvBS,KAAK,CAAE,GAAEV,GAAG,CAACE,IAAK,aAAYE,KAAM,UAASJ,GAAG,CAACC,GAAI,EAAC,CAAC,CACpDU,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,MAAM,IAAI;QACdP,UAAU,CAACO,MAAM,CAAC;QAClBT,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,CAAC;IACN;EACF,CAAC;EAED,MAAMU,WAAW,GAAIC,CAAC,IAAK;IACzB,IAAIC,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;IACvI,IAAIC,IAAI,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;IAEzF,IAAIC,GAAG,GAAGD,IAAI,CAACF,CAAC,CAACI,MAAM,EAAE,CAAC;IAC1B,IAAIC,IAAI,GAAGL,CAAC,CAACM,OAAO,EAAE;IACtB,IAAIC,KAAK,GAAGN,MAAM,CAACD,CAAC,CAACQ,QAAQ,EAAE,CAAC;IAChC,IAAIC,IAAI,GAAGT,CAAC,CAACU,WAAW,EAAE;IAE1B,OAAQ,GAAEP,GAAI,IAAGE,IAAK,IAAGE,KAAM,IAAGE,IAAK,EAAC;EAC1C,CAAC;EAGD,oBACE;IAAK,SAAS,EAAE,KAAK;IAAA,uBACnB;MAAA,wBACE;QAAK,SAAS,EAAC,YAAY;QAAA,uBACzB;UACE,IAAI,EAAC,MAAM;UACX,SAAS,EAAC,YAAY;UACtB,WAAW,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA;MAEvB;QAAA;QAAA;QAAA;MAAA,QACE,eAEN;QAAA,uBACE;UAAK,SAAS,EAAC,cAAc;UAAA,wBAC3B;YAAK,SAAS,EAAC,UAAU;YAAA,UAAC;UAAiB;YAAA;YAAA;YAAA;UAAA,QAAM,eACjD;YAAK,SAAS,EAAC,MAAM;YAAA,UAAEV,WAAW,CAAC,IAAIY,IAAI,EAAE;UAAC;YAAA;YAAA;YAAA;UAAA,QAAO;QAAA;UAAA;UAAA;UAAA;QAAA;MACjD;QAAA;QAAA;QAAA;MAAA,QACF,eACN;QAAA,uBACE;UAAK,SAAS,EAAC,aAAa;UAAA,wBAC1B;YAAK,SAAS,EAAC;UAAS;YAAA;YAAA;YAAA;UAAA,QAElB,eACN;YAAK,SAAS,EAAC;UAAa;YAAA;YAAA;YAAA;UAAA,QAEtB;QAAA;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA;EAED;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GA7DQxB,GAAG;AAAA,KAAHA,GAAG;AA+DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}