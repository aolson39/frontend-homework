{"ast":null,"code":"var _jsxFileName = \"/Users/adamolson/Desktop/skywardSolutions/weather-app-youtube/weather-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"045530b3196e77c7a0aefff762653af0\",\n  base: \"https://api.openweathermap.org/data/2.5/weather\"\n};\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [zip, setZip] = useState(10036);\n  const search = event => {\n    if (event.key === \"Enter\") {\n      fetch(`${api.base}?zip=${query}&units=imperial&appid=${api.key}`).then(res => res.json()).then(result => {\n        setZip(result);\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n        console.log(result.main);\n      });\n    }\n  };\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search...\",\n          onChange: e => {\n            setQuery(e.target.value);\n          },\n          value: query,\n          onKeyDown: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), typeof weather.main !== 'undefined' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [weather.name, \", \", weather.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: [weather.weather[0].description, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 52\n            }, this), Math.round(weather.main.temp), \"\\xB0F \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 53\n            }, this), \"High: \", Math.round(weather.main.temp_max), \"\\xB0F \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 63\n            }, this), \"Low: \", Math.round(weather.main.temp_min), \"\\xB0F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggles\",\n            children: [\"Wind Speed: \", Math.round(weather.wind.speed), \" mph \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 68\n            }, this), \"humidity: \", weather.main.humidity, \"%  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 55\n            }, this), \"pressure: \", weather.main.pressure, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 53\n            }, this), \"sunrise/sunset: \", weather.sys.sunrise, \" \", weather.sys.sunset]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IBGYDOQEkzTaFCZOQvhBPeOpXNw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","zip","setZip","search","event","fetch","then","res","json","result","console","log","main","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","e","target","value","Date","name","sys","country","description","Math","round","temp","temp_max","temp_min","wind","speed","humidity","pressure","sunrise","sunset"],"sources":["/Users/adamolson/Desktop/skywardSolutions/weather-app-youtube/weather-react/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst api = {\n  key: \"045530b3196e77c7a0aefff762653af0\", \n  base: \"https://api.openweathermap.org/data/2.5/weather\"\n}\n\nfunction App() {\n\n  const[query, setQuery] = useState('')\n  const[weather, setWeather] = useState({})\n  const[zip, setZip] = useState(10036)\n\n\n  const search = event => {\n    if(event.key === \"Enter\"){\n      fetch(`${api.base}?zip=${query}&units=imperial&appid=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setZip(result)\n          setWeather(result)\n          setQuery('')\n          console.log(result);\n          console.log(result.main);\n          \n        });\n    }\n  }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()]\n    let date = d.getDate()\n    let month = months[d.getMonth()]\n    let year = d.getFullYear()\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n\n  return (\n    <div className= 'App'>\n      <main>\n        <div className=\"search-box\">\n          <input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => {setQuery(e.target.value)}}\n            value={query}\n            onKeyDown={search}\n          />\n        </div>\n\n        {(typeof weather.main !== 'undefined') ? (\n        <div>\n            <div className=\"location-box\">\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n              <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n            </div>\n              <div className=\"weather-box\">\n                <div className=\"weather\">\n                  {weather.weather[0].description} <br />\n                  {Math.round(weather.main.temp)}°F <br />\n                  \n                  High: {Math.round(weather.main.temp_max)}°F <br />\n                  Low: {Math.round(weather.main.temp_min)}°F\n                </div>\n                <div className=\"toggles\">\n                  Wind Speed: {Math.round(weather.wind.speed)} mph <br />\n                  humidity: {weather.main.humidity}%  <br />\n                  pressure: {weather.main.pressure} <br />\n                  sunrise/sunset: {weather.sys.sunrise} {weather.sys.sunset}\n                </div>\n\n        \n              </div>\n            </div>\n        ) : ('')}\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}